cmake_minimum_required(VERSION 3.5)
project(bar)

# Default to C99
if(NOT CMAKE_C_STANDARD)
    set(CMAKE_C_STANDARD 99)
endif()

# Default to C++14
if(NOT CMAKE_CXX_STANDARD)
    set(CMAKE_CXX_STANDARD 14)
endif()

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
    add_compile_options(-Wall -Wextra -Wpedantic)
endif()

find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(foo REQUIRED)

# 1. Manually add the include directory
get_filename_component(INSTALL_DIR ${CMAKE_INSTALL_PREFIX} DIRECTORY)
include_directories(${INSTALL_DIR}/foo/include/)

include(GNUInstallDirs)

include_directories(include ${INCLUDE_DIRS})

## Declare a cpp executable
add_executable(Bar src/bar.cpp)
ament_target_dependencies(Bar rclcpp)
# 2. Link directly against the .so file
target_link_libraries(Bar "${INSTALL_DIR}/foo/lib/libfoo.so")

install(TARGETS Bar
  EXPORT export_${PROJECT_NAME}
  DESTINATION lib/${PROJECT_NAME})

install(TARGETS
  Bar
  DESTINATION lib/${PROJECT_NAME}
)

# ament_export_dependencies(mfm_common mfm_msgs)
ament_package()
